{"version":3,"sources":["components/Section/Section.js","components/Input/Input.js","components/AddButton/AddButton.js","components/Form/Form.js","components/ContactsList/ContactsList.js","components/Contacts/Contacts.js","hooks/useLocalStorage.js","App.js","index.js"],"names":["Section","title","children","className","defaultProps","Input","type","name","pattern","value","handleInputChange","label","required","onChange","autoComplete","AddButton","Form","addContact","useState","setName","number","setNumber","handleInput","event","currentTarget","onSubmit","preventDefault","ContactsList","contacts","removeContact","map","id","onClick","Contacts","filterFunction","filterValue","handleFilter","useLocalStorage","key","defaultValue","JSON","parse","window","localStorage","getItem","state","setState","useEffect","setItem","stringify","App","setContacts","filter","setFilter","find","contact","alert","prevContacts","uuidv4","length","normalizedFilter","toLowerCase","includes","idToRemove","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.df48e340.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport './Section.css';\n\nconst Section = ({ title, children }) => (\n  <section className=\"Section\">\n    <h1 className=\"Title\">{title}</h1>\n    {children}\n  </section>\n);\n\nSection.defaultProps = {\n  title: '',\n  children: [],\n};\n\nSection.propTypes = {\n  title: PropTypes.string,\n  children: PropTypes.node,\n};\n\nexport default Section;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport './Input.css';\n\nconst Input = ({\n  type,\n  name,\n  pattern,\n  title,\n  value,\n  handleInputChange,\n  label,\n}) => (\n  <label className=\"Label\">\n    {label}:\n    <input\n      className=\"Input\"\n      type={type}\n      name={name}\n      pattern={pattern}\n      title={title}\n      required\n      value={value}\n      onChange={handleInputChange}\n      autoComplete=\"off\"\n    />\n  </label>\n);\n\nInput.defaultProps = {\n  type: 'text',\n  label: '',\n};\n\nInput.propTypes = {\n  type: PropTypes.string,\n  name: PropTypes.string.isRequired,\n  pattern: PropTypes.string.isRequired,\n  title: PropTypes.string.isRequired,\n  handleInputChange: PropTypes.func.isRequired,\n  value: PropTypes.string.isRequired,\n  label: PropTypes.string,\n};\n\nexport default Input;\n","import React from 'react';\nimport './AddButton.css';\n\nconst AddButton = () => (\n  <button className=\"Addbtn__style\" type=\"submit\">\n    Add contact\n  </button>\n);\n\nexport default AddButton;\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport Input from '../Input';\nimport AddButton from '../AddButton';\nimport './Form.css';\n\nconst Form = ({ addContact }) => {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n\n  const handleInput = event => {\n    switch (event.currentTarget.name) {\n      case 'name':\n        setName(event.currentTarget.value);\n        break;\n      case 'number':\n        setNumber(event.currentTarget.value);\n        break;\n      default:\n        return;\n    }\n  };\n  const onFormSubmit = event => {\n    event.preventDefault();\n\n    addContact(name, number);\n    setNumber('');\n    setName('');\n  };\n\n  return (\n    <form onSubmit={onFormSubmit}>\n      <Input\n        label=\"Name\"\n        type=\"text\"\n        name=\"name\"\n        pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n        title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n        handleInputChange={handleInput}\n        value={name}\n      />\n      <Input\n        label=\"Phone number\"\n        type=\"tel\"\n        name=\"number\"\n        pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n        title=\"Номер телефона должен состоять из цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n        value={number}\n        handleInputChange={handleInput}\n      />\n      <AddButton />\n    </form>\n  );\n};\n\nForm.propTypes = {\n  addContact: PropTypes.func.isRequired,\n};\nexport default Form;\n","import React from 'react';\nimport './ContactsList.css';\n\nconst ContactsList = ({ contacts, removeContact }) => (\n  <ul className=\"List\">\n    {contacts.map(({ name, id, number }) => (\n      <li key={id} className=\"Contact\">\n        <p className=\"Text\">\n          <span className=\"Name\">{name}</span>\n          <span className=\"Phone\">{number}</span>\n        </p>\n        <button\n          className=\"Remove__btn\"\n          type=\"button\"\n          onClick={() => removeContact(id)}\n        >\n          Remove contact\n        </button>\n      </li>\n    ))}\n  </ul>\n);\n\nexport default ContactsList;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport Input from \"../Input\";\nimport ContactsList from \"../ContactsList\";\n\nconst Contacts = ({\n  title,\n  filterFunction,\n  filterValue,\n  handleFilter,\n  removeContact,\n}) => (\n  <>\n    <h2>{title}</h2>\n    <Input\n      label=\"Find contacts by name\"\n      type=\"text\"\n      name=\"filter\"\n      value={filterValue}\n      handleInputChange={handleFilter}\n      pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n      title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n    />\n    <ContactsList contacts={filterFunction()} removeContact={removeContact} />\n  </>\n);\n\nContacts.defaultProps = {\n  title: \"\",\n  filterValue: \"\",\n};\n\nContacts.propTypes = {\n  title: PropTypes.string,\n  filterFunction: PropTypes.func.isRequired,\n  filterValue: PropTypes.string,\n  handleFilter: PropTypes.func.isRequired,\n  removeContact: PropTypes.func.isRequired,\n};\n\nexport default Contacts;\n","import { useEffect, useState } from 'react';\r\n\r\nconst useLocalStorage = (key, defaultValue) => {\r\n  const [state, setState] = useState(\r\n    () => JSON.parse(window.localStorage.getItem(key)) ?? defaultValue,\r\n  );\r\n\r\n  useEffect(() => {\r\n    window.localStorage.setItem(key, JSON.stringify(state));\r\n  }, [key, state]);\r\n\r\n  return [state, setState];\r\n};\r\n\r\nexport default useLocalStorage;\r\n","import React, { useState } from 'react';\nimport { v4 as uuidv4 } from 'uuid';\n\nimport Section from './components/Section';\nimport Form from './components/Form';\nimport Contacts from './components/Contacts';\nimport useLocalStorage from './hooks/useLocalStorage';\n\nconst App = () => {\n  const [contacts, setContacts] = useLocalStorage('contacts', []);\n  const [filter, setFilter] = useState('');\n\n  const handleFilter = event => {\n    setFilter(event.currentTarget.value);\n  };\n\n  const filterContacts = () => {\n    if (filter) {\n      const normalizedFilter = filter.toLowerCase();\n\n      return contacts.filter(({ name }) =>\n        name.toLowerCase().includes(normalizedFilter),\n      );\n    } else {\n      return contacts;\n    }\n  };\n\n  const addContact = (name, number) => {\n    if (contacts.find(contact => contact.name === name)) {\n      alert('Attempt to create existing contact!');\n      return;\n    }\n\n    setContacts(prevContacts => [\n      ...prevContacts,\n      { name, id: uuidv4(), number },\n    ]);\n  };\n\n  const removeContact = idToRemove => {\n    setContacts(prevContacts => [\n      ...prevContacts.filter(({ id }) => id !== idToRemove),\n    ]);\n  };\n\n  return (\n    <div>\n      <Section title=\"Phonebook\">\n        <Form addContact={addContact} />\n        {contacts.length > 0 && (\n          <Contacts\n            filterValue={filter}\n            handleFilter={handleFilter}\n            title=\"Contacts\"\n            filterFunction={filterContacts}\n            removeContact={removeContact}\n          />\n        )}\n      </Section>\n    </div>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}